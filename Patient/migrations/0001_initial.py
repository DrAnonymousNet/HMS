# Generated by Django 4.0.4 on 2022-05-14 17:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Staff', '0001_initial'),
        ('Department', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=160)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('urgency', models.CharField(choices=[('Very very Urgent', 'Class A'), ('Very Urgent', 'Class B'), ('Not Urgent', 'Class C')], max_length=30)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Department.department')),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FileField(upload_to='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('for_which_test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Patient.labtest')),
                ('lab_attendant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Staff.labattendance')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DOB', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
                ('home_address', models.CharField(max_length=50)),
                ('next_of_kin_name', models.CharField(max_length=20)),
                ('next_of_kin_contact', models.CharField(max_length=20)),
                ('admitted', models.BooleanField()),
                ('department', models.ManyToManyField(to='Department.department')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='labtest',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Patient.patient'),
        ),
        migrations.AddField(
            model_name='labtest',
            name='prescribing_doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Staff.doctor'),
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('date', models.DateField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Staff.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='DrugPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('dosage_description', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=models.Model, to='Patient.patient')),
                ('prescribing_doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Staff.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('message', models.CharField(max_length=160)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Department.department')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Staff.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=160)),
                ('discharge_summary', models.CharField(max_length=160)),
                ('date_of_admission', models.DateField()),
                ('date_of_discharged', models.DateField(null=True)),
                ('admission_status', models.CharField(choices=[('Active', 'Active'), ('Discharge', 'Discharged')], max_length=10)),
                ('bed_number', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Department.bed')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Department.department')),
                ('for_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Patient.patient')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Department.room')),
            ],
            options={
                'unique_together': {('for_patient', 'date_of_admission')},
            },
        ),
    ]
